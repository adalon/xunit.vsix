<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- This will one day allow to add the xunit submodule to the repo, and automatically 
       allow debugging with full source from it, rather than nuget packages. Currently, 
       it doesn't work 'cause I couldn't figure out how to tell TD.NET to use the 
       dynamically referenced project outputs for running, instead of its own :( 
       Leaving it here since I was really really close!
  --> 
  <!--<Import Project="SmartReferences.targets" />-->
  
  <ItemGroup>
    <SmartReference Include="xunit.assert">
      <AssemblyName>xunit.assert</AssemblyName>
      <AssemblyFile>..\packages\xunit.assert.2.1.0\lib\dotnet\xunit.assert.dll</AssemblyFile>
      <RepositoryName>xunit</RepositoryName>
      <RelativeSource>src\xunit.assert\xunit.assert.csproj</RelativeSource>
      <RelativeSolution>xunit.vs2015.sln</RelativeSolution>
      <IsSubmodule>false</IsSubmodule>
    </SmartReference>

    <SmartReference Include="xunit.core">
      <AssemblyName>xunit.core</AssemblyName>
      <AssemblyFile>..\packages\xunit.core.2.1.0\lib\dotnet\xunit.core.dll</AssemblyFile>
      <RepositoryName>xunit</RepositoryName>
      <RelativeSource>src\xunit.core\xunit.core.csproj</RelativeSource>
      <RelativeSolution>xunit.vs2015.sln</RelativeSolution>
      <IsSubmodule>false</IsSubmodule>
    </SmartReference>

    <SmartReference Include="xunit.execution.desktop">
      <AssemblyName>xunit.execution.desktop</AssemblyName>
      <AssemblyFile>..\packages\xunit.execution.desktop.2.1.0\lib\dotnet\xunit.execution.desktop.dll</AssemblyFile>
      <RepositoryName>xunit</RepositoryName>
      <RelativeSource>src\xunit.execution.desktop\xunit.execution.desktop.csproj</RelativeSource>
      <RelativeSolution>xunit.vs2015.sln</RelativeSolution>
      <IsSubmodule>false</IsSubmodule>
    </SmartReference>
  </ItemGroup>

</Project>